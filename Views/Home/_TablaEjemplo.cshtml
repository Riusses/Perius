@model IEnumerable<Perius.Models.ViewModels.Clientes.ClienteViewModel>

<div class="col-sm-2 mb-5">
    <label>Nombre:</label>
    <input id="nombre" class="form-control" value="Jordi" />
</div>

<table id="dt-clientes">
    @* Contenido cargado mediante script *@
</table>

<script>
    $(document).ready(function () {
        //TODO
        $.fn.dataTable.ext.errMode = 'none';

        $("#dt-clientes").DataTable({
            processing: true,
            serverSide: true,
            responsive: true,
            ajax: {
                url: "/Home/ObtenerTablaEjemplo",
                type: "POST",
                datatype: "json",
                //data: function (data) {
                //    return JSON.stringify(data);
                //}
            },
            columns: [
                { data: "idCliente", visible: false },
                { data: "idTipoDocumento", visible: false },
                { data: "nombre", title: "@Html.DisplayNameFor(model => model.Nombre)", title: "Nombre" },
                { data: "primerApellido", title: "@Html.DisplayNameFor(model => model.PrimerApellido)" },
                { data: "segundoApellido", title: "@Html.DisplayNameFor(model => model.SegundoApellido)" },
                { data: "documento", title: "@Html.DisplayNameFor(model => model.Documento)" },
                {
                    data: "fechaAlta", title: "@Html.DisplayNameFor(model => model.FechaAlta)", render: function (data, type, row) {
                        if (type === "display") {
                            if (isNaN(data) && moment(data, moment(data, "YYYY-MM-DDTHH:mm:ss", true).isValid(), true).isValid()) {
                                return moment(data).format("DD/MM/YYYY hh:mm");
                            }
                        }
                        return data;
                    }
                },
                {
                    data: "fechaBaja", title: "@Html.DisplayNameFor(model => model.FechaBaja)", render: function (data, type, row) {
                        if (type === "display") {
                            if (isNaN(data) && moment(data, "YYYY-MM-DDTHH:mm:ss", true).isValid()) {
                                return moment(data).format("DD/MM/YYYY hh:mm");
                            }
                        }
                        return data;
                    }
                },
                {
                    data: "activo", title: "@Html.DisplayNameFor(model => model.Activo)", render: function (data, type, row, meta) {
                        return data == true ? 1 : 0;
                    }
                }
            ]
        });
    });
</script>
